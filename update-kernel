#!/usr/bin/env sh
# Author: J.M. Thiessen <jacob@x0rz3q.com>
# Version: 0.2

LOG_FILE="/var/log/kernel_update.log"
SEPERATOR_STRING="----------"

# print usage
usage() {
	printf "%s\n" "Usage: $0 [-l] [-e] [-m] [-h]"
	printf "\t%s\n" "-l enable lvm"
	printf "\t%s\n" "-e enable luks"
	printf "\t%s\n" "-m enable mdadm"
	printf "\t%s\n" "-h help"
}

OPTS=""

while getopts ":lemh" arg; do
	case $arg in
		l)
			OPTS="$OPTS --lvm"
			;;
		e)
			OPTS="$OPTS --luks"
			;;
		m)
			OPTS="$OPTS --mdadm"
			;;
		h | *)
			usage
			exit 0
			;;
	esac
done

# simple logging method
log() {
	printf "\033[0;37m%s \033[0m%s\n" "[$(date +%FT%TZ)]" "$*"
}

# seperator for log file to make things easier to find
seperator() {
	printf "%s%s%s\n" $SEPERATOR_STRING "$*" $SEPERATOR_STRING >> $LOG_FILE
}

if [ "$(id -u)" != 0 ]; then
	printf "\033[1;31m%s\n" "Root permissions required!"
	exit 1
fi

log "Log file is located at $LOG_FILE"

if [ "$(grep -c /boot < /proc/mounts)" = 0 ]; then
	mount $(printenv BOOT_DRIVE) "/boot"
fi

if [ -f "$LOG_FILE" ]; then
	rm "$LOG_FILE";
fi

eselect kernel list

printf "%s\n" "kernel version?"
read -r version
eselect kernel set "$version"

kernel=$(uname -r)
cp "/boot/config-$kernel" /usr/src/linux

cd "/usr/src/linux" || exit 1

seperator "olddef"
log "Running olddef"
{ make olddefconfig >> $LOG_FILE; } 2>&1

seperator "kernel"
log "Running make kernel"
{ make -j"$(nproc)" >> $LOG_FILE; } 2>&1

seperator  "modules"
log "Running make modules"
{ make -j"$(nproc)" modules_install >> $LOG_FILE; } 2>&1

seperator "installing"
log "Installing new kernel"
{ make install >> $LOG_FILE; } 2>&1

seperator "initramfs"
log "Setting up initramfs"
echo $OPTS
{ genkernel initramfs $OPTS >> $LOG_FILE; } 2>&1

seperator "bootloader"
log "Updating bootloader"
{ grub-mkconfig -o /boot/grub/grub.cfg >> $LOG_FILE; } 2>&1

log "Unmounting boot"
umount "/boot"
